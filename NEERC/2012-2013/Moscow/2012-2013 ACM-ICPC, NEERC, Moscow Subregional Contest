Contest Report:
-in 2012 the winners of MOSCOW's regional solved 9 problems and were :
	Moscow SU ST: Aleksandr Kaluzhin, Sergey Rogulenko, Sergey Fedorov
	Moscow SU SG: Vasily Mokin, Victor Sadkov, Vyacheslav Dubinin
-when we attempted the problems we solved only 5 problems which would have placed us at 37th place (29th if we solved them quickly)
-problems J and K turned out to be pretty solvable (given our current level we could solve both of them in 1.5 hours) ... problem E had many issues (floating point precision and many conditions) but we might have got it ... in short :
	-best case senario we solve 8 problems and end up between 3rd and 16th positions depending on speed and penality
	-worst case we solve nothing more (and have a large penality ) and end up at the 37th place
-these two scenarios aren't completly hypothetical and might turn up to be true in either ECPC or ACPC (difference between 3rd place + going to ICPC and getting 37th) .... and remember last year at ECPC teams from 15th to 32nd position solved the same 3 problems and at ACPC ~20 teams solved 7 problems but only 9 of them got to ICPC

Problem B:
Category : Greedy
#ACs : 19
Solution(s) : start with zero as answer -> check if done -> else incease the answer -> check -> .... 
how the check function works : I've no idea :v

Problem D:
Category : Strings
#ACs : 5
Solution(s) : after reading the problem you get the idea that it requires the use of suffix array then binary searching the answer ... sure enough the solution is some thing along those lines except that you BS over the LCP table (which you build using the suffix array) .... one solution used hashing and I have no idea how that solution works

Problem H:
Category : Graph ,Greedy
#ACs : 26
Solution(s) : get the number of connected components ... then add the (OPTIMAL) cost of jumping between them (It's not as easy as it sounds)

Problem J:
Category : Sorting
#ACs : 163
Solution(s) : to optimally use the information returned ... one solution is to use merge sort which will make at most 9966 (< 10000) comparasions

Problem K:
Category : Implementation
#ACs : 137
Solution(s) : just implement and count ... happy f**kin codin' time :'D
