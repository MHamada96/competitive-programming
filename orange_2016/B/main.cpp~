#include <bits/stdc++.h>
#define loop(i,n) for(int i = 0;i < (n);i++)
#define range(i,a,b) for(int i = (a);i <= (b);i++)
#define rrep(i,n) for(int i = (n);i >= 0;i--)
#define rran(i,a,b) for(int i = (b);i >= (a);i--)
#define all(A) A.begin(),A.end()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define sz(A) A.size()
#define vi vector<int>
#define vl vector<long>
#define vd vector<double>
#define ll long long
#define pi pair<int,int>
#define point pair<double,double>
#define pl pair<ll,ll>
#define popcnt(x) __builtin_popcount(x)
#define LSOne(x) ((x) & (-(x)))
#define xx first
#define yy second
#define PQ priority_queue
#define print(A,t) cerr << #A << ": "; copy(all(A),ostream_iterator<t>(cerr," " )); cerr << endl
#define prp(p) cerr << "(" << (p).first << " ," << (p).second << ")";
#define prArr(A,n,t)  cerr << #A << ": "; copy(A,A + n,ostream_iterator<t>(cerr," " )); cerr << endl
#define PRESTDIO() cin.tie(0),cerr.tie(0),ios_base::sync_with_stdio(0)
using namespace std;


ll ans = 0;
ll A[4][1000];
pl M[1 << 20];
int n,idx = 0;
int main(){
	scanf("%d",&n);
	loop(j,n) loop(i,4) scanf("%lld",&A[i][j]);
	loop(i,n) loop(j,n) {
		ll s = A[0][i] + A[1][j];
		M[idx++] = mp(s,0);
	}
	sort(M,M + idx);
	int m = idx;
	idx = 0;
	loop(i,m){
		int j = i;
		while(j < m && M[i].xx == M[j].xx) j++;
		M[idx++] = mp(M[i].xx,j - i);
		i = j - 1;
	}
	loop(i,n) loop(j,n) {
		ll s = -A[2][i] - A[3][j];
		auto p = lower_bound(M,M + idx,mp(s,0LL)) - M;
		if(p != idx && M[p].xx == s) ans += M[p].yy;
	}
	printf("%lld\n",ans);
	return 0;
}
