#include <bits/stdc++.h>
#define loop(i,n) for(int i = 0;i < (n);i++)
#define range(i,a,b) for(int i = (a);i <= (b);i++)
#define rrep(i,n) for(int i = (n);i >= 0;i--)
#define rran(i,a,b) for(int i = (b);i >= (a);i--)
#define step(i,a,b,d) for(int i = (a);i <= (b); i += d)
#define all(A) A.begin(),A.end()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define sz(A) A.size()
#define len(A) A.length()
#define vi vector<int>
#define ll long long
#define pi pair<int,int>
#define point pair<double,double>
#define pl pair<ll,ll>
#define popcnt(x) __builtin_popcount(x)
#define LSOne(x) ((x) & (-(x)))
#define xx first
#define yy second
#define PQ priority_queue
#define print(A,t) cerr << #A << ": "; copy(all(A),ostream_iterator<t>(cerr," " )); cerr << endl
#define prp(p) cerr << "(" << (p).first << " ," << (p).second << ")";
#define prArr(A,n,t)  cerr << #A << ": "; copy(A,A + n,ostream_iterator<t>(cerr," " )); cerr << endl
#define pre() cin.tie(0),cerr.tie(0),ios_base::sync_with_stdio(0)
using namespace std;

char G[3][4];
set<string> S;

bool done(){
	int ctr = 0;
	loop(i,3) loop(j,3) ctr += G[i][j] != '.';
	if(ctr == 9) return 1;
	
	ctr = 0;	
	loop(i,3) ctr += G[i][i] == G[0][0] && G[0][0] != '.';
	if(ctr == 3) return 1;
	
	ctr = 0;
	loop(i,3) ctr += G[i][2 - i] == G[0][2] && G[0][2] != '.';
	if(ctr == 3) return 1;
	
	loop(i,3){
		ctr = 0;
		loop(j,3) ctr += G[i][j] == G[i][0] && G[i][0] != '.';
		if(ctr == 3) return 1;
	}
	
	loop(i,3){
		ctr = 0;
		loop(j,3) ctr += G[j][i] == G[0][i] && G[0][i] != '.';
		if(ctr == 3) return 1;
	}
	return 0;
}

void save(){
	string s = "";
	loop(i,3) s += string(G[i]);
	S.insert(s);
}

void generate(int t){
	if(done()) return save();
	loop(i,3) loop(j,3){
		if(G[i][j] != '.') continue;	
		if(t) G[i][j] = 'O';
		else G[i][j] = 'X';
		generate(1 - t);
		G[i][j] = '.';
	}
}

int main(){
	loop(i,3) strcpy(G[i],"...");
	generate(0);
	int T;
	scanf("%d",&T);
	while(T--){
		string s = "";
		loop(i,3){
			scanf("%s",G[i]);
			s += string(G[i]);		
		}
		puts((S.find(s) != S.end()) ? "yes" : "no");
	}
	return 0;
}
